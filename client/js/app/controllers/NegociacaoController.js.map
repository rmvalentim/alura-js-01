{"version":3,"sources":["../../app-es6/controllers/NegociacaoController.js"],"names":["NegociacaoController","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_ordemAtual","_service","NegociacaoService","_listaNegociacoes","Bind","ListaNegociacoes","NegociacoesView","_mensagem","Mensagem","MensagemView","_init","lista","then","negociacoes","forEach","adiciona","negociacao","catch","texto","error","setInterval","importaNegociacoes","event","preventDefault","_criaNegociacao","cadastra","mensagem","_limpaFormulario","erro","importa","apaga","esvazia","Negociacao","DateHelper","textoParaData","value","parseInt","parseFloat","focus","coluna","inverteOrdem","ordena","a","b"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["class NegociacaoController {\r\n\r\n    constructor () {        \r\n\r\n        let $ = document.querySelector.bind(document);\r\n        this._inputData = $('#data');\r\n        this._inputQuantidade = $('#quantidade');\r\n        this._inputValor = $('#valor');    \r\n        \r\n        this._ordemAtual = '';\r\n\r\n        this._service = new NegociacaoService();\r\n        \r\n        this._listaNegociacoes = new Bind ( \r\n            new ListaNegociacoes(),\r\n            new NegociacoesView($('#negociacoesView')),\r\n            'adiciona', 'esvazia', 'ordena', 'inverteOrdem' );\r\n\r\n        this._mensagem = new Bind ( \r\n            new Mensagem(),\r\n            new MensagemView($('#mensagemView')),\r\n            'texto'\r\n        );\r\n\r\n        this._init();\r\n    }\r\n\r\n    _init() {\r\n\r\n        this._service\r\n            .lista()\r\n            .then((negociacoes) => \r\n                negociacoes.forEach(negociacao => \r\n                    this._listaNegociacoes.adiciona(negociacao)))\r\n            .catch(erro => this._mensagem.texto = error);\r\n        \r\n        setInterval(() => {\r\n            this.importaNegociacoes();\r\n        }, 3000);\r\n    }\r\n\r\n    adiciona (event) {\r\n        \r\n        event.preventDefault();\r\n\r\n        let negociacao = this._criaNegociacao();\r\n\r\n        this._service\r\n            .cadastra(negociacao)\r\n            .then(mensagem => {\r\n                this._listaNegociacoes.adiciona(negociacao);\r\n                this._mensagem.texto = mensagem;\r\n                this._limpaFormulario();\r\n            })\r\n            .catch(erro => this._mensagem.texto = erro);        \r\n\r\n    }\r\n\r\n    importaNegociacoes() {\r\n\r\n        this._service\r\n            .importa(this._listaNegociacoes.negociacoes)\r\n            .then(negociacoes => negociacoes.forEach(negociacao => {\r\n                this._listaNegociacoes.adiciona(negociacao);\r\n                this._mensagem.texto = 'Negociações do período importadas com sucesso'\r\n            }))\r\n            .catch(erro => this._mensagem.texto = erro);\r\n    }\r\n\r\n    apaga () {\r\n\r\n        this._service\r\n            .apaga()\r\n            .then(mensagem => {\r\n                this._listaNegociacoes.esvazia();\r\n                this._mensagem.texto = mensagem;\r\n            })\r\n            .catch(erro => this._mensagem.texto = erro);\r\n\r\n    }\r\n\r\n    _criaNegociacao () {\r\n\r\n        return new Negociacao(\r\n            DateHelper.textoParaData(this._inputData.value),\r\n            parseInt(this._inputQuantidade.value),\r\n            parseFloat(this._inputValor.value)\r\n        );\r\n    }\r\n\r\n    _limpaFormulario () {\r\n\r\n        this._inputData.value = '';\r\n        this._inputQuantidade.value = 1;\r\n        this._inputValor.value = 0.0;\r\n        this._inputData.focus();\r\n    }\r\n\r\n    ordena( coluna ) {\r\n        \r\n        if( this._ordemAtual == coluna ) {\r\n\r\n            this._listaNegociacoes.inverteOrdem();\r\n        } else {\r\n            \r\n            this._listaNegociacoes.ordena((a, b) => a[coluna] - b[coluna]);\r\n        }\r\n        this._ordemAtual = coluna;\r\n    }\r\n}"]}