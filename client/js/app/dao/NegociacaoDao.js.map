{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","Math","random","onsuccess","onerror","console","log","e","target","error","negociacoes","cursor","openCursor","atual","result","dado","value","push","Negociacao","_data","_quantidade","_valor","continue","name","clear","targer"],"mappings":";;;;;;IAAMA,a;AAEF,2BAAYC,UAAZ,EAAwB;AAAA;;AAEpB,aAAKC,WAAL,GAAmBD,UAAnB;AACA,aAAKE,MAAL,GAAc,aAAd;AACH;;;;iCAEQC,U,EAAY;AAAA;;AAEjB,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,oBAAIC,UAAU,MACTN,WADS,CAETO,WAFS,CAEG,CAAC,MAAKN,MAAN,CAFH,EAEkB,WAFlB,EAGTO,WAHS,CAGG,MAAKP,MAHR,EAITQ,GAJS,CAILP,UAJK,EAIOQ,KAAKC,MAAL,EAJP,CAAd;;AAMIL,wBAAQM,SAAR,GAAoB,aAAK;;AAErBR;AACH,iBAHD;;AAKAE,wBAAQO,OAAR,GAAkB,aAAK;;AAEnBC,4BAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAb,2BAAO,yCAAP;AACH,iBAJD;AAMP,aAnBM,CAAP;AAoBH;;;qCAEY;AAAA;;AAET,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,oBAAIc,cAAc,EAAlB;;AAEA,oBAAIC,SAAS,OAAKpB,WAAL,CACZO,WADY,CACA,CAAC,OAAKN,MAAN,CADA,EACe,WADf,EAEZO,WAFY,CAEA,OAAKP,MAFL,EAGZoB,UAHY,EAAb;;AAKAD,uBAAOR,SAAP,GAAmB,aAAK;;AAEnB,wBAAIU,QAAQN,EAAEC,MAAF,CAASM,MAArB;;AAEA,wBAAGD,KAAH,EAAU;;AAEN,4BAAIE,OAAOF,MAAMG,KAAjB;;AAEAN,oCAAYO,IAAZ,CAAiB,IAAIC,UAAJ,CAAeH,KAAKI,KAApB,EAA2BJ,KAAKK,WAAhC,EAA6CL,KAAKM,MAAlD,CAAjB;;AAEAR,8BAAMS,QAAN;AAEH,qBARD,MAQO;;AAEH3B,gCAAQe,WAAR;AACH;AACL,iBAhBD;;AAkBAC,uBAAOP,OAAP,GAAiB,aAAK;AAClBC,4BAAQC,GAAR,CAAY,WAAWC,EAAEC,MAAF,CAASC,KAAT,CAAec,IAAtC;AACA3B,2BAAO,wCAAP;AACH,iBAHD;AAIH,aA/BM,CAAP;AAgCH;;;qCAEY;AAAA;;AAET,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,oBAAIC,UAAU,OAAKN,WAAL,CACTO,WADS,CACG,CAAC,OAAKN,MAAN,CADH,EACkB,WADlB,EAETO,WAFS,CAEG,OAAKP,MAFR,EAGTgC,KAHS,EAAd;;AAKA3B,wBAAQM,SAAR,GAAoB,aAAK;;AAErBR,4BAAQ,mCAAR;AACH,iBAHD;;AAKAE,wBAAQO,OAAR,GAAkB,aAAK;;AAEnBC,4BAAQC,GAAR,CAAYC,EAAEkB,MAAF,CAAShB,KAArB;AACAb,2BAAO,8CAAP;AACH,iBAJD;AAKH,aAjBM,CAAP;AAkBH","file":"NegociacaoDao.js","sourcesContent":["class NegociacaoDao {\r\n\r\n    constructor(connection) {\r\n\r\n        this._connection = connection;\r\n        this._store = 'negociacoes';\r\n    }\r\n\r\n    adiciona(negociacao) {\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            let request = this\r\n                ._connection\r\n                .transaction([this._store], 'readwrite')\r\n                .objectStore(this._store)\r\n                .add(negociacao, Math.random());\r\n\r\n                request.onsuccess = e => {\r\n\r\n                    resolve();\r\n                };\r\n\r\n                request.onerror = e => {\r\n\r\n                    console.log(e.target.error);\r\n                    reject('Não foi possível adicionar a negociação');\r\n                };\r\n\r\n        });\r\n    }\r\n\r\n    listaTodos() {\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            let negociacoes = [];\r\n            \r\n            let cursor = this._connection\r\n            .transaction([this._store], 'readwrite')\r\n            .objectStore(this._store)\r\n            .openCursor();\r\n            \r\n            cursor.onsuccess = e => {\r\n\r\n                 let atual = e.target.result;\r\n\r\n                 if(atual) {\r\n\r\n                     let dado = atual.value;\r\n\r\n                     negociacoes.push(new Negociacao(dado._data, dado._quantidade, dado._valor));\r\n\r\n                     atual.continue();\r\n\r\n                 } else { \r\n\r\n                     resolve(negociacoes);\r\n                 }\r\n            };\r\n\r\n            cursor.onerror = e => {\r\n                console.log('Error:' + e.target.error.name);\r\n                reject('Não foi possível listar as negociações');\r\n            };\r\n        });\r\n    }\r\n\r\n    apagaTodos() {\r\n\r\n        return new Promise((resolve, reject) => {\r\n            \r\n            let request = this._connection\r\n                .transaction([this._store], 'readwrite')\r\n                .objectStore(this._store)\r\n                .clear();\r\n\r\n            request.onsuccess = e => {\r\n\r\n                resolve('Negociações removidas com sucesso');\r\n            }\r\n\r\n            request.onerror = e => {\r\n\r\n                console.log(e.targer.error);\r\n                reject('Não foi possível apagar todas as negociações');\r\n            }\r\n        });\r\n    }\r\n}"]}